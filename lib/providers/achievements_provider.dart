import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../services/achievements_service.dart';
import '../models/achievement.dart';
import 'user_settings_provider.dart';

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
final achievementsServiceProvider = ChangeNotifierProvider<AchievementsService>((ref) {
  final service = AchievementsService();
  
  // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future.microtask(() async {
    final userSettings = ref.read(userSettingsProvider);
    final dailyNormML = userSettings?.dailyNormML ?? 2000;
    
    // üéØ –û–±—ã—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–æ—á–∏—Å—Ç–∫—É –¥–µ–ª–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ)
    await service.initialize(dailyNormML: dailyNormML, forceReset: false);
  });
  
  return service;
});

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
final allAchievementsProvider = Provider<List<Achievement>>((ref) {
  final service = ref.watch(achievementsServiceProvider);
  return service.achievements;
});

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
final completedAchievementsProvider = Provider<List<Achievement>>((ref) {
  final service = ref.watch(achievementsServiceProvider);
  return service.completedAchievements;
});

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
final activeAchievementsProvider = Provider<List<Achievement>>((ref) {
  final service = ref.watch(achievementsServiceProvider);
  return service.activeAchievements;
});

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É—Ä–æ–≤–µ–Ω—å, XP)
final userStatsProvider = Provider<Map<String, int>>((ref) {
  final service = ref.watch(achievementsServiceProvider);
  return {
    'level': service.userLevel,
    'xp': service.userXp,
    'streak': service.currentStreak,
    'nextLevelXp': service.nextLevelXp,
  };
});
